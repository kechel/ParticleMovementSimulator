/*
 * panelMain.java
 *
 * Created on August 23, 2008, 11:49 AM
 */

package de.kechel.particlemovementsimulator.gui;

import java.util.*;
import javax.swing.table.TableModel;

/**
 *
 * @author  jan
 */
public class jpParticlePool extends javax.swing.JPanel {
    
    /** Creates new form panelMain */
    public jpParticlePool() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jtfCorner1X = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfCorner2X = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtfCorner1Y = new javax.swing.JTextField();
        jtfCorner1Z = new javax.swing.JTextField();
        jtfCorner2Y = new javax.swing.JTextField();
        jtfCorner2Z = new javax.swing.JTextField();
        jcbDestroyLeavingParticles = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jcbParticleType = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jtfAmountOfParticlesToCreate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jtfSpeedMin = new javax.swing.JTextField();
        jtfSpeedMax = new javax.swing.JTextField();
        jtfDestroyAfter = new javax.swing.JTextField();
        jcbDestroy = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtSingleParticles = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("1st edge");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel4, gridBagConstraints);

        jtfCorner1X.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfCorner1X, gridBagConstraints);

        jLabel5.setText("2nd edge");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel5, gridBagConstraints);

        jtfCorner2X.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfCorner2X, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 120));
        jLabel6.setText("Pool Space (Cube)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 0, 5);
        add(jLabel6, gridBagConstraints);

        jLabel7.setText("x");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jLabel7, gridBagConstraints);

        jLabel8.setText("y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jLabel8, gridBagConstraints);

        jLabel9.setText("z");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jLabel9, gridBagConstraints);

        jtfCorner1Y.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfCorner1Y, gridBagConstraints);

        jtfCorner1Z.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfCorner1Z, gridBagConstraints);

        jtfCorner2Y.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfCorner2Y, gridBagConstraints);

        jtfCorner2Z.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfCorner2Z, gridBagConstraints);

        jcbDestroyLeavingParticles.setText("Destroy Particles that leave this borders");
        jcbDestroyLeavingParticles.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jcbDestroyLeavingParticles, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 120));
        jLabel10.setText("Generate random Particles during initialisation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 0, 5);
        add(jLabel10, gridBagConstraints);

        jLabel11.setText("Particle Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 0, 4);
        add(jLabel11, gridBagConstraints);

        jcbParticleType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Electron", "Positron", "Neutron", "Proton" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jcbParticleType, gridBagConstraints);

        jLabel12.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 0, 4);
        add(jLabel12, gridBagConstraints);

        jtfAmountOfParticlesToCreate.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 0, 4);
        add(jtfAmountOfParticlesToCreate, gridBagConstraints);

        jLabel13.setText("Speed");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel13, gridBagConstraints);

        jLabel14.setText("min");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel14, gridBagConstraints);

        jLabel15.setText("max");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel15, gridBagConstraints);

        jtfSpeedMin.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfSpeedMin, gridBagConstraints);

        jtfSpeedMax.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfSpeedMax, gridBagConstraints);

        jtfDestroyAfter.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jtfDestroyAfter, gridBagConstraints);

        jcbDestroy.setText("Destroy Particles that moved more than");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jcbDestroy, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 120));
        jLabel1.setText("Specify single particles");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 5, 0, 5);
        add(jLabel1, gridBagConstraints);

        jScrollPane2.setMaximumSize(new java.awt.Dimension(700, 200));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(700, 200));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(700, 200));

        jtSingleParticles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mass", "Charge", "Position X", "Position Y", "Position Z", "Velocity Vx", "Velocity Vy", "Velocity Vz"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtSingleParticles);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jScrollPane2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    public void actualizePropertiesFromGui(Properties p)
    {
        p.setProperty("ppCorner1X", jtfCorner1X.getText());
        p.setProperty("ppCorner1Y", jtfCorner1Y.getText());
        p.setProperty("ppCorner1Z", jtfCorner1Z.getText());
        p.setProperty("ppCorner2X", jtfCorner2X.getText());
        p.setProperty("ppCorner2Y", jtfCorner2Y.getText());
        p.setProperty("ppCorner2Z", jtfCorner2Z.getText());
        
        p.setProperty("ppDestroy", this.jcbDestroy.isSelected() ? "true" : "false");
        p.setProperty("ppDestroyLeavingParticles", this.jcbDestroyLeavingParticles.isSelected() ? "true" : "false");
        p.setProperty("ppAmountOfParticlesToCreate", this.jtfAmountOfParticlesToCreate.getText());
        p.setProperty("ppDestroyAfter", this.jtfDestroyAfter.getText());
        p.setProperty("ppSpeedMax", this.jtfSpeedMax.getText());
        p.setProperty("ppSpeedMin", this.jtfSpeedMin.getText());
        
        p.setProperty("ppParticleType", String.valueOf(this.jcbParticleType.getSelectedIndex()));
        
        TableModel tm = this.jtSingleParticles.getModel();
        String pref = "single_particle_";
        for( int i = 0; i < tm.getRowCount(); i++)
        {
            p.setProperty(pref + i + "_mass", String.valueOf(tm.getValueAt(i, 0)));
            p.setProperty(pref + i + "_charge", String.valueOf(tm.getValueAt(i, 1)));
            p.setProperty(pref + i + "_position_x", String.valueOf(tm.getValueAt(i, 2)));
            p.setProperty(pref + i + "_position_y", String.valueOf(tm.getValueAt(i, 3)));
            p.setProperty(pref + i + "_position_z", String.valueOf(tm.getValueAt(i, 4)));
            p.setProperty(pref + i + "_velocity_x", String.valueOf(tm.getValueAt(i, 5)));
            p.setProperty(pref + i + "_velocity_y", String.valueOf(tm.getValueAt(i, 6)));
            p.setProperty(pref + i + "_velocity_z", String.valueOf(tm.getValueAt(i, 7)));
        }
    }
    
    public void actualizeGuiFromProperties(Properties p)
    {
        jtfCorner1X.setText(p.getProperty("ppCorner1X"));
        jtfCorner1Y.setText(p.getProperty("ppCorner1Y"));
        jtfCorner1Z.setText(p.getProperty("ppCorner1Z"));
        jtfCorner2X.setText(p.getProperty("ppCorner2X"));
        jtfCorner2Y.setText(p.getProperty("ppCorner2Y"));
        jtfCorner2Z.setText(p.getProperty("ppCorner2Z"));
        
        jcbDestroy.setSelected(p.getProperty("ppDestroy").equalsIgnoreCase("true") ? true : false);
        jcbDestroyLeavingParticles.setSelected(p.getProperty("ppDestroyLeavingParticles").equalsIgnoreCase("true") ? true : false);
        jtfAmountOfParticlesToCreate.setText(p.getProperty("ppAmountOfParticlesToCreate"));
        jtfDestroyAfter.setText(p.getProperty("ppDestroyAfter"));
        jtfSpeedMax.setText(p.getProperty("ppSpeedMax"));
        jtfSpeedMin.setText(p.getProperty("ppSpeedMin"));
        
        TableModel tm = this.jtSingleParticles.getModel();
        String pref = "single_particle_";
        for( int i = 0; i < tm.getRowCount(); i++)
        {
            try
            {
                tm.setValueAt(Double.parseDouble(p.getProperty(pref + i + "_mass")), i, 0);
                tm.setValueAt(Double.parseDouble(p.getProperty(pref + i + "_charge")), i, 1);
                tm.setValueAt(Double.parseDouble(p.getProperty(pref + i + "_position_x")), i, 2);
                tm.setValueAt(Double.parseDouble(p.getProperty(pref + i + "_position_y")), i, 3);
                tm.setValueAt(Double.parseDouble(p.getProperty(pref + i + "_position_z")), i, 4);
                tm.setValueAt(Double.parseDouble(p.getProperty(pref + i + "_velocity_x")), i, 5);
                tm.setValueAt(Double.parseDouble(p.getProperty(pref + i + "_velocity_y")), i, 6);
                tm.setValueAt(Double.parseDouble(p.getProperty(pref + i + "_velocity_z")), i, 7);
            }
            catch(NumberFormatException e)
            {
                //System.out.println("error line " + i + ": " + e);
                for( int j = 0; j <= 7; j++)
                {
                    tm.setValueAt(null, i, j);
                }
            }
            catch(NullPointerException e)
            {
                for( int j = 0; j <= 7; j++)
                {
                    tm.setValueAt(null, i, j);
                }
            }
        }
        
        try
        {
            jcbParticleType.setSelectedIndex(Integer.parseInt(p.getProperty("ppParticleType")));
        }
        catch(NumberFormatException e)
        {
            jcbParticleType.setSelectedIndex(0);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JCheckBox jcbDestroy;
    private javax.swing.JCheckBox jcbDestroyLeavingParticles;
    private javax.swing.JComboBox jcbParticleType;
    private javax.swing.JTable jtSingleParticles;
    private javax.swing.JTextField jtfAmountOfParticlesToCreate;
    private javax.swing.JTextField jtfCorner1X;
    private javax.swing.JTextField jtfCorner1Y;
    private javax.swing.JTextField jtfCorner1Z;
    private javax.swing.JTextField jtfCorner2X;
    private javax.swing.JTextField jtfCorner2Y;
    private javax.swing.JTextField jtfCorner2Z;
    private javax.swing.JTextField jtfDestroyAfter;
    private javax.swing.JTextField jtfSpeedMax;
    private javax.swing.JTextField jtfSpeedMin;
    // End of variables declaration//GEN-END:variables
    
}
